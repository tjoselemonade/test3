name: Appium CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:


# jobs:
#   test:
#     name: Run Unit Tests
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Install and Run Appium Server
#       run: |
#         chmod +x ./scripts/start-sdk.sh
#         chmod +x ./scripts/install-android-sdk.sh
#         chmod +x ./scripts/emulator-up.sh
#         chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
#         ./scripts/RunAppiumServer.sh

#     - uses: actions/checkout@v4
#     - uses: actions/setup-java@v4
#       with:
#         distribution: 'temurin' # See 'Supported distributions' for available options
#         java-version: '8'
#     - run: java -version

#     - name: get java version
#       run: |
#         java -version

#     - name: Install and Run Appium Server
#       run: |
#         chmod +x ./scripts/install-android-sdk.sh
#         chmod +x ./scripts/start-sdk.sh
#         chmod +x ./scripts/emulator-up.sh
#         chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
#         ./scripts/RunAppiumServer.sh

#     - name: Install android SDK
#       run: |
#         ./scripts/install-android-sdk.sh

#     - name: run sdk
#       run: |
#         ./scripts/start-sdk.sh
#     - name: Install emulator
#       run: |
#         ./scripts/emulator-up.sh

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Add avdmanager and sdkmanager to system PATH
        run: |
            echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: Install Sdk
        run: |
           yes Y | sdkmanager --licenses
           sdkmanager --install ${ANDROID_SDK_PACKAGES}
  
      - name: Build emulator
        run: |
            echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"

      - name: Launch emulator
        run: |
          chmod +x ./start_emu_headless.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./start_emu_headless.sh